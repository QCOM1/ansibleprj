---
- name: Play database
  hosts: db 
  gather_facts: no
  become: yes
  tags:
  - db-install
  tasks:
  - name: hello DB
    debug:
        msg: "hello DB"
#sudo apt-get install gnupg
  - name: Install gnupg
    package: 
      name: gnupg
      state: present 
#wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -
  - name: Mongo DB key is added
    apt_key:
        url: https://www.mongodb.org/static/pgp/server-4.2.asc
#echo "deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.2 main" | sudo tee /etc/apt/sources.list.d/mongodb.list
  - name: mongo DB is enabled
    apt_repository:
       repo: deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.2 main
       state: present
       filename: mongodb
#sudo apt install mongodb-org
  - name: Installing MongoDB  
    package: 
     name: mongodb-org
     state: present
#sudo systemctl start mongod 
#sudo systemctl enable mongod
  - name: mongodb is started
    service:
     name: mongod
     state: started
     enabled: yes
##whitelist IPs : https://www.digitalocean.com/community/tutorials/how-to-install-mongodb-on-ubuntu-18-04
#Validate: mongo --eval 'db.runCommand({ connectionStatus: 1})'

- name: Configure database- Admin 
  hosts: db 
  gather_facts: no
  become: yes
  tags:
  - db-config-admin
  tasks:
  #- name: Create admin user
  #  command:  "{{ item }}"
  #  loop:
  #  - mongo admin --eval 'db.dropUser("{{db_admin_user}}}")'
  #  - |
  #    mongo admin --eval 'db.createUser( { user: "{{db_admin_user}}", pwd: "{{db_admin_pass}}", roles: [ { role: "clusterAdmin", db: "admin" }, { role: "userAdminAnyDatabase", db: "admin" } ] } )'
  - name: Enable security
    blockinfile:
      path: /etc/mongod.conf
      block: |
       security:
        authorization: "enabled"
      backup: yes
      state: present
    notify: mongodb is Restarted 
  handlers:
  - name: mongodb is Restarted
    service:
      name: mongod
      state: restarted 

#2) drop admin user if exist
#mongo admin --eval 'db.dropUser("superadmin")'
#3) create admin user
#mongo admin --eval 'db.createUser( { user: "superadmin", pwd: "MyPass1234", roles: [ { role: "clusterAdmin", db: "admin" }, { role: "userAdminAnyDatabase", db: "admin" } ] } )'
#4) enable security (/etc/mongod.conf) --> Restart Mongodb
#> security:
#>   authorization: "enabled"


- name: Rest of  database- Configure 
  hosts: db 
  gather_facts: no
  become: yes
  tags:
  - db-config
  tasks:
  - name: pip3 install
    package: 
      name: python3-pip
      state: present
  - name: pip pymongo install
    pip:
      name: pymongo
      state: latest
  - name: todo DB user exists
    mongodb_user:
      login_user: "{{db_admin_user}}" 
      login_password: "{{db_admin_pass}}"
      database: admin
      user: "{{db_user_todo}}"
      password: "{{db_pass_todo}}"
      state: present
      roles:
        - db: "{{db_name_todo}}"
          role: readWrite 
        
  - name: db accepts connection from anywhere
    lineinfile:
        path: /etc/mongod.conf
        line: "  bindIp: 0.0.0.0"
        regexp: '^(.*)bindIp(.*)$'
        state: present
        backup: yes
    notify: mongodb is restarted
  handlers:
  - name: mongodb is restarted
    service:
      name: mongod
      state: restarted


       



